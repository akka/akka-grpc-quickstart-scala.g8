version: ~> 1.0
language: scala
scala:
  - 2.13.1

before_install:
  - if [ ! -f ~/.jabba/jabba.sh ]; then curl -L -v --retry 5 -o jabba-install.sh https://raw.githubusercontent.com/shyiko/jabba/0.11.2/install.sh && bash jabba-install.sh; fi
  - . ~/.jabba/jabba.sh
install: jabba install $(jabba ls-remote "adopt@~1.$TRAVIS_JDK.0-0" --latest=patch) && jabba use "$_" && java -Xmx32m -version


jobs:
  include:
    - stage: check
      name: "sbt & Paradox (JDK 8)"
      script: sbt test docs/paradox
      env: TRAVIS_JDK=adopt@1.8-0

    - name: "sbt & Paradox (JDK 11)"
      script: sbt test docs/paradox
      env: TRAVIS_JDK=adopt@1.11-0

    - name: "Maven (JDK 8)"
      ## set name to "hello-world-grpc" and accept all other defaults (--force)
      script: sbt new file://$PWD --name=hello-world-grpc --force && pushd hello-world-grpc &&  mvn test         && popd || travis_terminate 1
      env: TRAVIS_JDK=adopt@1.8-0

    - name: "Maven (JDK 11)"
      ## set name to "hello-world-grpc" and accept all other defaults (--force)
      script: sbt new file://$PWD --name=hello-world-grpc --force && pushd hello-world-grpc &&  mvn test         && popd || travis_terminate 1
      env: TRAVIS_JDK=adopt@1.11-0

    - name: "Gradle (JDK 8)"
      script: sbt new file://$PWD --name=hello-world-grpc --force && pushd hello-world-grpc &&  ./gradlew --console=plain build
      env: TRAVIS_JDK=adopt@1.8-0

    - name: "Gradle (JDK 11)"
      script: sbt new file://$PWD --name=hello-world-grpc --force && pushd hello-world-grpc &&  ./gradlew --console=plain build
      env: TRAVIS_JDK=adopt@1.11-0

stages:
  - name: check

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.jabba
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot
    - $HOME/.gradle
    - $HOME/.m2/repository

notifications:
  email:
    recipients:
      - akka.official@gmail.com
    on_success: never
    on_failure: always
    if: branch = master
